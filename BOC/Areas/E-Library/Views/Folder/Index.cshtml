
@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_DeskTop.cshtml";
}

@using BOC.Areas.E_Library.Models
@using DevExtreme.AspNet.Mvc
@model IEnumerable<Doc_Folder_Get>
 <style>
 .dx-scrollable {
   width: 100%
    
}
.dx-button-content{
    background-color:green;border-radius:8px!important
}
.dx-button-text{
    color:white;/*border-radius:10px!important*/
}
.dx-button-content:hover{
    background-color:darkgreen!important
}
.dx-header-row{
        background-color:lightgreen;color:darkgreen
    }

   /* .dx-treelist-expanded{
      float:left;margin-left:60px;margin-top:10px;z-index:9999999999
      
    }
     .dx-treelist-collapsed{
          float:left;margin-left:60px

    }*/

</style>

<div style="width:90%;margin:auto;margin-top:40px;margin-bottom:40px;background-color:lightgray">
@(Html.DevExtreme().TreeList<Doc_Folder_Get>()
    .ID("employees")
    .DataSource(Model)
    .KeyExpr("ID")
    .ParentIdExpr("HeadID")
    .FilterRow(filterRow => filterRow.Visible(true)).ShowBorders(true)@*.ShowRowLines(true)*@
    .Selection(s => s.Mode(SelectionMode.Single)).Paging(m=>m.PageSize(10)).Scrolling(scrolling => scrolling.ColumnRenderingMode(GridColumnRenderingMode.Virtual))
    .Columns(column => {

          @* column.AddFor(m => m.ID).Alignment(HorizontalAlignment.Center).HeaderCellTemplate(@<text>
                <div>Mô tả</div><div> Description</div>
            </text>).Width(50);
*@



        @* column.AddFor(m => m.Folder).Alignment(HorizontalAlignment.Center).HeaderCellTemplate(@<text>
                <div>Thư mục</div><div> Folder</div>
            </text>).CellTemplate( @<text>
       <img src="/images/folder-icon.jpg" width="20" height="20"><span> Thư mục / Folder</span>
    </text>);*@

    @* column.AddFor(m => m.RowCount).Alignment(HorizontalAlignment.Center);*@
    column.AddFor(m => m.Name).Alignment(HorizontalAlignment.Center).HeaderCellTemplate(@<text>
                <div><b>Tên</b></div><div> Name</div>
            </text>).CellTemplate(@<text>
                <img src="/images/folder-icon.jpg" width="20" height="20">
                <span class="name"><%-data.Name%></span>
            </text>)@*.CellTemplate( @<text>
       <img src="/images/user.png" width="20" height="20">
    </text>)*@;
    
    column.AddFor(m => m.Description).Alignment(HorizontalAlignment.Center).HeaderCellTemplate(@<text>
                <div style=""><b>Mô tả</b></div><div> Description</div>
            </text>);
    column.AddFor(m => m.InputDivision).Alignment(HorizontalAlignment.Center).HeaderCellTemplate(@<text>
                <div><b>Đơn vị nhập liệu</b></div><div> Input Division</div>
            </text>);
     column.AddFor(m => m.Action).Alignment(HorizontalAlignment.Center).HeaderCellTemplate(@<text>
                <div><b>Thao tác</b></div><div> Action</div>
            </text>).CellTemplate( @<text>
        @(Html.DevExtreme().Button()
                
                .Text("Mở / Open")
                .OnClick("function () { onItemClick(data); }")
        )
    </text>);
       
    })@*.OnCellClick("_OnCellClick")
    .ColumnAutoWidth(true)
    .ShowRowLines(true)
    .ShowBorders(true)
    .ExpandedRowKeys(new[] { 1 })*@
)
</div>

 <script>

     function onItemClick(data) {
    //DevExpress.ui.notify(data.Description);
    //alert(data.Name)
    //window.location.href = "/E-Library/Search/SearchResult?ID="+data.ID

    window.location.href = "/E-Library/Search/GetSearchFolder?ID="+data.ID
}
           function _OnCellClick(selectedItems) {
            var data = selectedItems.selectedRowsData[0];
            alert(data.Description)
            }
            function getOrderDay(rowData) {
            return (new Date(rowData.OrderDate)).getDay();
            }
            function selection_changed(selectedItems) {
           var data = selectedItems.selectedRowsData[0];
            alert(data.Description)
            //window.location.href = "/E-Library/Folder/Index?ID="+ data.ISBN
           if(data) {
           /* $(".employeeNotes").text(data.Notes);
            $(".employeePhoto").attr("src", data.Picture);*/
           
        }
    }

//    $(function() {
//    $("#employees").dxTreeList({
 
//        columns: [{
//            dataField: "Name",
//            customizeText: function(cellInfo) {
//                return cellInfo.value + "$";
//            }
//        }]
//    });
//});


//$(function() {
//    $("#employees").dxTreeList({
//        // ...
//        columns: [{
//            dataField: "Name",
//            cellTemplate: function(element, info) {
//                 element.append("<div>" + info.Name + "</div>")
//                        .css("color", "blue");
//            }
//        }]
//    });
//});

        </script>